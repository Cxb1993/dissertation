* Thesis Statement Notes
** Goals
   - Exploring simulation of plastic surgery flap operations on isolated regions and the scalp
   - Exploring potential performance opportunities stemming from lattice based deformers
   - Understanding issues and challenges with designing and deploying simulation tools in practical settings
** Deliverables / Results
   - A software artifact: Authoring tool for designing educational representations of surgical operations
     - High performance elastic simulation
     - Support for topological cutting
     - Support for advanced, nonlinear material models
     - Support for rigid body collisions
     - Distributed deployment model with multiple simultaneous web front-ends
   - Approval / excitement of domain expert
   - Several peer-reviewed papers covering core technologies
     - Advanced material models with lattice deformers (Patterson 2012)
     - Supporting high performance surgical simulation (Mitchell 2015)
     - Non-manifold levelsets for high performance self collisions (Mitchell 2015)
     - Optimized schur-complement block solvers for lattice deformers (Mitchell 2016)  
   - Feasibility demo demonstrating core software functionality and deployment design
** Revision notes (March 16 2017)
   - dimension (geometry?) geometry and space, materiality
   - purpose - enumerate concrete, but disjoint examples
   - challanges come after specific example (they make more sense)
      - Cater to needs, talk about medical simulation, talk about concrete and abstract, and how the abstract connects with specific instance
      - utility
	- observing behaviors recognising patterns
	  - if these are useful, does our reconstruction match these real properties
	  - visual - identitgy landmarks
        - need to comprise, where and when?
          - utility, what is important to us
        - not all comprises are equal
** Revision notes (March 28 2017)
   How does what I've done support generality over what a system specifically designed for surgery

   Blocking = preserve applicability for other systems.

   Problem dissection

      largely didatic, peel away layers, arrive at numerical challenges

      deforming solid that reacts to internal mechanics and external stimuli

         state representation / continous? / discrete?
            pertantant mechanical properties: position, velocity? 

	    dynamic / quasistatic / static
            Time as a first class citizen
            slowing down external stimuli - playback at high speed.
            quasi-static - time-independent

        reference configugration
          alternatives ? particles, mesh, 
          vs. texture mapping, texture coordinates
          how to choose? does not need to map to zero energy configuration

        user interactions
         topology actions
         position constraints
         force constraints
         contact constraints

       discretization
          why? no anaylitcal description
          how to move from continuous to discrete
          what is our base discrete element? Cube, tet, something more exotic?
          Is material exact vs embededed (conforming)

** Revision notes (April 25 2017)

   (3.1) Second paragraph - purpose

   Last paragraph - perhaps state less alternatives, focus more on our model.

   (3.2) deformation defination 
        continous collection of material points with some glue between them

        reference configuration serves as a name space for labeling material points
        also used as shape, if material is placed in, which exhbits no mechanical response

** Revison notes (May 2 2017)

  Remaining chapters:
    Macroblocks
    Parallelization
    NonManifold Embedding
    Deployment   

** Revision Notes (May 26 2017)

  * Findings
    Incompressible vs. Inextensible
    What applies surgery benchmark
    What applies to general purpose elasticity
    NonManifold Levelsets for untangling

    Motivation

    Start with a question
    Tool specificiation
    Broader Context
    Challenges

** Revision Notes (June 2 2017)


   Why do we need requirement gathering
     pick our battles
     triage
     identify the pertinate problems
     problems with synergy
     

** Revision Notes (June 6 2017)

   Don't undercut argument by making "reality" an impossible standard
   Take the oppertunity to target what we can "cognitive training"
   
   Geometry begits function, also asthetics
   Mechanics
    
   Clarify subject at end of geometry sub-section 

   Reactivity
     Cause and effect - practitioner and system
     What is the input and output of the system
     What is the role of time here?

** Revision Notes (June 8 2017)

   Avoid paragraphs starting with no information !!

   End of the question section
      look more narrowly at the specific subset of medical simulation
      reflected in our choosen benchmark (craniofacial surgery).

   Simple user input/output schemes can still be used to do a lot of
   interesting things.

   Dynamics 
 
   wall clock time vs. simulation time: different
 
   real world has temporal element
     sequencing
     timing
     lag effects
     
   how much of this do we keep, how much do we abstract, how much do
   we simplify

   why?

   costs
     availability of models that describe energy disapation are
     complex
     don't know the right answer
     right answer is expensive

   not needed
     perfect resolution is not essential 
   

   Utility
     Focus on existing use cases
     talk about deployment restraints

   
** Revision Notes (June 9 2017)

   Emphases time in dynamics section

** Revision Notes (June 12 2017)

   move size and scope from direct comparision with artificaliaty

   Change visual detail

     traditionally shape, also composition maybe function

   Reactivity
     explaination of why this complicates things
     boundary conditions complicate life - why?
        natural intuituons are not always easy to accomidate
        natural intuitions can often create difficult to fullfil
          demands and specfications
   
   Interactivity

     Maybe talk about network lag, simulation lag, compare with
     multiplayer game.

** Revision Notes (June 14 2017 )

   Engineering Section
 
   Emhpasis on the procedural methods, be more clear we are talking
   about procedural animations.

   Theory is a bad word.

   Refactor second goal paragraph as an intro into continuoum instead
   of elements.

   Skip the plasticity stuff - distractions, skip it.

** Revision Notes ( June 15 2017)

   Add discussion about why solving the matrix K is hard

   Describe the process of constructing discrete formulas (paraphrase
   Alg 6.1)

   Derive the Newton update via a taylor expansion

   Talk about quasistatics after newton process, describe why solving
   for forces=0 is useful, how we get animations from this process

** Revision Notes ( June 23 2017)

   Bold face all matricies

   Clarify expressions for post-quadrature cell energy

   "Hence we employ a methodogly to avoid building the matrix
   explicitly...."

   Add "Using the chain rule + circled equations, we can derive this
   expression for H(x)   
   
   Why are constraints hard for regularity: Concentrated near
   surfaces, dynamic, steps to mitigate in chapter ???
   
   Image at topology changes: Preview of hybrid lattices... 


 
** Revision Notes ( June 27 2017)
   Use ; instead of : in expressions

** Revision Notes (June 28 2017)
   General computation

   Arrays of structs of arrays
   Talk about input -> output models

   Illustration of kernel heirarchy
   
   Deployment chapter - talk about development history (what I wrote, what/who I pulled from )

   Make sure captions are uniformly formatted (centering, vspace, etc...)

   Cite technologies / standards

** Revision Notes (July 3 2017)

   8.1  

   2nd paragraph - 

   less defensive, shorter 

   Intro to courts section should be less defensive.

   Conclusion

   Lessons Learned
     
     which peices of knowledge resulted from practical experience and
     implementation? Highlight anything that was non-quite-as-predicted or suprising?

     
** Revision Notes (July 11 2017)

   Think about intiution argument, consider surface finding : we
   thought about many ways to describe the surface, but did we really
   need to in the end?

   

     
